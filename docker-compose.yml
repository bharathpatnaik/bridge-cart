version: "3.7"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - bridge-net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - bridge-net

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /Users/personal/Documents/GitHub/bridge-cart/catalog:/sqlfiles
    networks:
      - bridge-net

  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:2.5.1
    container_name: airflow
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./customer_segmentation:/opt/airflow/dags/customer_segmentation
    ports:
      - "8080:8080"
    command: >
      bash -c "
      airflow db init || airflow db upgrade &&
      airflow users create --username airflow --password airflow --firstname Air --lastname Flow --role Admin --email admin@example.com || true &&
      airflow webserver -p 8080 &
      airflow scheduler
      "
    networks:
      - bridge-net

  reporting:
    build:
      context: ./reports
      dockerfile: Dockerfile
    container_name: reports
    depends_on:
      - postgres
    ports:
      - "5010:5010"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: airflow
      DB_USER: airflow
      DB_PASS: airflow
    networks:
      - bridge-net

networks:
  bridge-net:
    driver: bridge

volumes:
  pgdata: